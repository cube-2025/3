from datetime import datetime, timedelta

# –ü–æ–ø—ã—Ç–∫–∞ –ø–æ–¥–∫–ª—é—á–∏—Ç—å colorama –¥–ª—è —Ü–≤–µ—Ç–Ω–æ–≥–æ –≤—ã–≤–æ–¥–∞
try:
    from colorama import init, Fore, Style
    init()
except ImportError:
    class Fore:
        RED = ''
        GREEN = ''
        CYAN = ''
        YELLOW = ''
        RESET = ''
    class Style:
        BRIGHT = ''
        RESET_ALL = ''

# –ö–ª–∞—Å—Å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞
class Employee:
    def __init__(self, name, start_time, end_time, hourly_rate):
        self.name = name
        self.start_time = start_time
        self.end_time = end_time
        self.hours_worked = self.calculate_work_hours()
        self.salary = self.hours_worked * hourly_rate

    def calculate_work_hours(self):
        """–í—ã—á–∏—Å–ª–µ–Ω–∏–µ –æ—Ç—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö —á–∞—Å–æ–≤, –≤–∫–ª—é—á–∞—è –Ω–æ—á–Ω—É—é —Å–º–µ–Ω—É"""
        time_format = "%H:%M"
        start = datetime.strptime(self.start_time, time_format)
        end = datetime.strptime(self.end_time, time_format)
        if end < start:
            end += timedelta(days=1)  # –ù–æ—á–Ω–∞—è —Å–º–µ–Ω–∞ (—á–µ—Ä–µ–∑ –ø–æ–ª–Ω–æ—á—å)
        duration = (end - start).total_seconds() / 3600
        return duration

    def __repr__(self):
        return f"{self.name}: {self.hours_worked:.2f} —á, {self.salary:.2f} —Ä—É–±."

def get_valid_time(prompt):
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π —Ñ–æ—Ä–º–∞—Ç–∞"""
    while True:
        time_str = input(prompt).strip()
        try:
            datetime.strptime(time_str, "%H:%M")
            return time_str
        except ValueError:
            print(Fore.RED + "‚ùóÔ∏è –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤—Ä–µ–º–µ–Ω–∏. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ HH:MM." + Fore.RESET)

def main():
    hourly_rate = 500
    employees = []

    print(Fore.CYAN + Style.BRIGHT + "üïí –£—á—ë—Ç —Ä–∞–±–æ—á–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤" + Style.RESET_ALL)

    # –í–≤–æ–¥ –¥–∞–Ω–Ω—ã—Ö
    while True:
        name = input("\n–í–≤–µ–¥–∏—Ç–µ –∏–º—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ (–∏–ª–∏ –ø—É—Å—Ç–æ –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è): ").strip()
        if not name:
            break
        start_time = get_valid_time(f"–í—Ä–µ–º—è –ø—Ä–∏—Ö–æ–¥–∞ –¥–ª—è {name} (HH:MM): ")
        end_time = get_valid_time(f"–í—Ä–µ–º—è —É—Ö–æ–¥–∞ –¥–ª—è {name} (HH:MM): ")

        emp = Employee(name, start_time, end_time, hourly_rate)
        employees.append(emp)
        print(Fore.GREEN + f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω {name}, –æ—Ç—Ä–∞–±–æ—Ç–∞–ª {emp.hours_worked:.2f} —á, –∑–∞—Ä–∞–±–æ—Ç–∞–ª {emp.salary:.2f} —Ä—É–±." + Fore.RESET)

    # –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –ø–æ –æ—Ç—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–º —á–∞—Å–∞–º
    employees.sort(key=lambda e: e.hours_worked, reverse=True)

    # –í—ã–≤–æ–¥ –æ—Ç—á—ë—Ç–∞
    print("\n" + Fore.YELLOW + "üìÑ –û—Ç—á—ë—Ç –ø–æ —Ä–∞–±–æ—á–µ–º—É –≤—Ä–µ–º–µ–Ω–∏" + Fore.RESET)
    print("-" * 45)
    total_salary = 0
    total_hours = 0
    overtime_employees = 0

    for emp in employees:
        print(f"{emp.name:<20} | –ß–∞—Å–æ–≤: {emp.hours_worked:>5.2f} | –ó–∞—Ä–ø–ª–∞—Ç–∞: {emp.salary:>8.2f} —Ä—É–±.")
        total_salary += emp.salary
        total_hours += emp.hours_worked
        if emp.hours_worked > 8:
            overtime_employees += 1

    average_hours = total_hours / len(employees) if employees else 0

    print("-" * 45)
    print(f"{'–û–±—â–∞—è –ó–ü:':<20} {total_salary:>21.2f} —Ä—É–±.")
    print(f"{'–°—Ä–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è:':<20} {average_hours:>21.2f} —á")
    print(f"{'–° –ø–µ—Ä–µ—Ä–∞–±–æ—Ç–∫–æ–π (>8—á):':<20} {overtime_employees:>21}")

    # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ —Ñ–∞–π–ª
    with open("work_time_report.txt", "w", encoding="utf-8") as f:
        f.write("üïí –û—Ç—á—ë—Ç –æ —Ä–∞–±–æ—á–µ–º –≤—Ä–µ–º–µ–Ω–∏:\n")
        f.write("-" * 45 + "\n")
        for emp in employees:
            f.write(f"{emp.name:<20} | –ß–∞—Å–æ–≤: {emp.hours_worked:>5.2f} | –ó–∞—Ä–ø–ª–∞—Ç–∞: {emp.salary:>8.2f} —Ä—É–±.\n")
        f.write("-" * 45 + "\n")
        f.write(f"–û–±—â–∞—è –ó–ü: {total_salary:.2f} —Ä—É–±.\n")
        f.write(f"–°—Ä–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è: {average_hours:.2f} —á\n")
        f.write(f"–°–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ —Å –ø–µ—Ä–µ—Ä–∞–±–æ—Ç–∫–æ–π: {overtime_employees}\n")

    print(Fore.CYAN + "\nüìÅ –û—Ç—á—ë—Ç —Å–æ—Ö—Ä–∞–Ω—ë–Ω –≤ 'work_time_report.txt'" + Fore.RESET)

if __name__ == "__main__":
    main()
